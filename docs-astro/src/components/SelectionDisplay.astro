---
export interface DisplayItem {
  label: string;
  value: string;
  displayPath: string;
  highlight?: boolean;
  prefix?: string;
  suffix?: string;
  className?: string;
}

export interface Props {
  items: DisplayItem[];
  columns?: number;
  selectorId?: string;
}

const { items, columns, selectorId = "drone-packages" } = Astro.props;

const gridCols = columns 
  ? `grid-cols-${columns}` 
  : 'grid-cols-3 sm:grid-cols-6';
---

<div class={`grid ${gridCols} gap-4 p-4 bg-zinc-50 dark:bg-zinc-900/30 rounded-md my-4 border border-zinc-200 dark:border-zinc-800`}>
  {items.map((item) => (
    <div>
      <p class="text-[10px] uppercase tracking-wider text-zinc-500 dark:text-zinc-500 mb-1">
        {item.label}
      </p>
      <p class={`text-sm font-medium ${item.className || (item.highlight ? 'text-green-600 dark:text-green-500' : 'text-zinc-900 dark:text-zinc-100')}`}>
        {item.prefix && <span>{item.prefix}</span>}
        <span data-next-display={item.displayPath.includes('selection.') ? item.displayPath : `selection.${selectorId}.${item.displayPath}`}>
          {item.value}
        </span>
        {item.suffix && <span>{item.suffix}</span>}
      </p>
    </div>
  ))}
</div>